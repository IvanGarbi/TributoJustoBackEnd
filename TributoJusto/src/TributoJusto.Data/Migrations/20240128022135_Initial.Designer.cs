// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TributoJusto.Data.Context;

#nullable disable

namespace TributoJusto.Data.Migrations
{
    [DbContext(typeof(TributoJustoDbContext))]
    [Migration("20240128022135_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TributoJusto.Business.Models.Favorito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FilmeId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<Guid?>("LivroId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("LivroId");

                    b.ToTable("Favoritos", (string)null);
                });

            modelBuilder.Entity("TributoJusto.Business.Models.Filme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Actors")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ImdbRating")
                        .IsRequired()
                        .HasColumnType("VARCHAR(4)");

                    b.Property<string>("Plot")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Writer")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("VARCHAR(4)");

                    b.HasKey("Id");

                    b.ToTable("Filmes", (string)null);
                });

            modelBuilder.Entity("TributoJusto.Business.Models.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL");

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CountrySale")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<int>("PageCount")
                        .HasColumnType("INT");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Saleability")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Livros", (string)null);
                });

            modelBuilder.Entity("TributoJusto.Business.Models.Favorito", b =>
                {
                    b.HasOne("TributoJusto.Business.Models.Filme", "Filme")
                        .WithMany("Favoritos")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TributoJusto.Business.Models.Livro", "Livro")
                        .WithMany("Favoritos")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("TributoJusto.Business.Models.Filme", b =>
                {
                    b.Navigation("Favoritos");
                });

            modelBuilder.Entity("TributoJusto.Business.Models.Livro", b =>
                {
                    b.Navigation("Favoritos");
                });
#pragma warning restore 612, 618
        }
    }
}
